
var querystring = require("querystring");


exports.prepareOptions = function(options) {

    if (options.offset == null) { 
        options.offset = 0;
    }
  
    if (options.limit == null) { 
        options.limit = 100;
    }
    
    options.offset = parseInt(options.offset);
    options.limit = parseInt(options.limit);    
};


exports.GridView = function(model) {

    var self = this;
    
    self.model = model;
  
    self.getColumnInfo = function ( queryoptions ) {
        var columns = [];
        for (var i = 0; i < self.model.columnDefs.length; i++) {
            columns.push({
                "fldid": self.model.columnDefs[i].fldid,
                "caption": self.model.columnDefs[i].caption || self.model.columnDefs[i].fldid,
                "type": self.model.columnDefs[i].type || 'string',
                "format": self.model.columnDefs[i].format,
                "prefix": self.model.columnDefs[i].prefix,
                "suffix": self.model.columnDefs[i].suffix
            });
        }
        return columns;
    };
  
    
    self.registerExpressAppRoutes = function( app ) {

	    app.get( self.model.url+'/metadata/json', function(req, res) {
            var queryoptions = {};
            self.model.getRowCount( queryoptions, function(result) {
                res.writeHead(200, {'content-type': 'text/json' });
                var jsonData = JSON.stringify({
                    "options": queryoptions,
                    "columns": self.getColumnInfo(queryoptions),
                    "rowformat": self.model.rowformat,
                    "rowcount": result
                });
                res.write( jsonData );
                res.end('\n');
            });
        });
        
	    app.get( self.model.url+'/tabledata/json', function(req, res) {
            var queryoptions = {
                offset: req.query.offset,
                limit: req.query.limit
            };
            self.model.getData( queryoptions, function(result) {
                res.writeHead(200, {'content-type': 'text/json; charset=utf-8' });
                var jsonData = JSON.stringify({
                    "options": queryoptions,
                    "rowformat": self.model.rowformat,
                    "meta": { columns: self.getColumnInfo(queryoptions) },
                    "data": result
                });
                res.write( jsonData );
                res.end('\n');
            });
	    });
	
    };
  
};










